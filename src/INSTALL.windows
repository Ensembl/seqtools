
INSTALLING SEQTOOLS ON WINDOWS
==============================

SeqTools cannot currently run natively on Windows. However, it can be installed
and run using Cygwin (which provides a Linux-like environment on Windows).

From the Cygwin website, download setup-x86.exe (or setup-x86_64.exe if you have
a 64-bit machine).  Run the setup program, accepting all the default
options. You will need to choose a mirror on the Choose Download Site page
(e.g. cygwin.mirror.constant.com).  On the Select Packages page, select these
packages:

    Devel/gcc-core
    Devel/gcc-g++
    Devel/libsqlite3-devel    (optional)
    Devel/make
    Devel/pkg-config
    Editors/nano              (optional)
    Libs/libcurl-devel        (optional)
    Libs/libglib2.0-devel *** also tick the SOURCE checkbox ***
    Libs/libgtk2.0-devel  *** also tick the SOURCE checkbox ***
    Libs/libreadline-devel    (or Libs/readline)
    Web/wget                  (optional)
    X11/xinit

When installation is complete, open the Cygwin terminal and type the following
commands, replacing XXX with the version of SeqTools you want to download:

    wget ftp://ftp.sanger.ac.uk/pub/resources/software/seqtools/PRODUCTION/seqtools-XXX.tar.gz
    tar -xf seqtools-XXX.tar.gz
    cd seqtools-XXX
    ./configure
    make
    make install

You need to start an "xterm" terminal to run the SeqTools programs from. This can be done
by typing the following command in the Cygwin terminal:

    export DISPLAY=:0; startxwin -- -emulate3buttons &

Alternatively, to start the xterm automatically each time you open the Cygwin terminal, 
you can add these commands to your bash profile. To do this, type the following command
in the Cygwin terminal (you only need to do this once):

    echo "DISPLAY=:0; startxwin -- -emulate3buttons &" >> ~/.bash_profile


To install in a different location, or for help with dependencies or for more
detailed instructions on configure see the tips below and also the INSTALL file
in this directory.


Tips
----

You may need to run make install using sudo if you do not have root privileges,
i.e.:

    sudo make install

Alternatively, to install to a different location (e.g. one not requiring root
privileges), use the --prefix argument when you run ./configure. For example,
the following command would set the install location to foo/bar in your home
directory:

    ./configure --prefix=~/foo/bar

If GTK+ is not in the default location then you may need to pass its location to
the configure script. GTK+ is usually installed in /usr/lib, /usr/local/lib,
/opt/lib or /opt/local/lib. If GTK+ is in e.g. /opt/local/lib then you would
call configure with the following arguments:

    ./configure PKG_CONFIG_PATH=/opt/local/lib/pkgconfig LDFLAGS="-Xlinker -rpath -Xlinker /opt/local/lib"


Notes on Drives
===============

Cygwin uses a "fake" root directory to make it look like you are in a linux-like
filesystem. This is very different from Windows' filesystem, so it can be
confusing to start with if you want to find your Cygwin files in Windows or vice
versa. Here's a list of some useful locations to help find your way around
(assuming you installed Cygwin in the default location):

WHAT                    REAL LOCATION IN WINDOWS           PATH FROM INSIDE CYGWIN
Windows C drive         C:                                 /cygdrive/c
Windows user directory  C:\Documents and Settings\<user>   /cygdrive/c/Documents and Settings/<user>
Cygwin root directory   C:\cygwin                          /
Cygwin user directory   C:\cygwin\home\<user>              /home/<user>
