# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Common settings for compiles.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

# If gbtools is in a subdirectory, add it to the include path
@USE_GBTOOLS_TRUE@am__append_1 = -I$(top_srcdir)/gbtools/src/include

# If gbtools is in a subdirectory, add it; otherwise look for a local installation
@USE_GBTOOLS_TRUE@am__append_2 = $(top_builddir)/gbtools/.libs/libgbtools.a
@USE_GBTOOLS_FALSE@am__append_3 = -lgbtools

# use sqlite for blixem if it's available
@USE_SQLITE3_TRUE@am__append_4 = $(DEPS_SQLITE3)
@USE_SQLITE3_TRUE@am__append_5 = $(DEPS_SQLITE3_LIBS)
@USE_SQLITE3_TRUE@am__append_6 = -DSQLITE3
@USE_LIBCURL_FALSE@bin_PROGRAMS = blixem$(EXEEXT)
@USE_LIBCURL_TRUE@bin_PROGRAMS = blixem$(EXEEXT) blixemh$(EXEEXT)
subdir = blixemApp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/./seqtools_version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_blixem_OBJECTS = blixem-blxmain.$(OBJEXT) blixem-blxview.$(OBJEXT) \
	blixem-blxFetch.$(OBJEXT) \
	blixem-sequencecellrenderer.$(OBJEXT) \
	blixem-blxpanel.$(OBJEXT) blixem-bigpicture.$(OBJEXT) \
	blixem-bigpicturegrid.$(OBJEXT) blixem-detailview.$(OBJEXT) \
	blixem-detailviewtree.$(OBJEXT) blixem-blxwindow.$(OBJEXT) \
	blixem-exonview.$(OBJEXT) blixem-coverageview.$(OBJEXT) \
	blixem-blxdotter.$(OBJEXT) blixem-blxFetchDb.$(OBJEXT) \
	blixem-blxcontext.$(OBJEXT)
blixem_OBJECTS = $(am_blixem_OBJECTS)
am__DEPENDENCIES_1 =
@USE_SQLITE3_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(top_builddir)/seqtoolsUtils/libSeqtoolsUtils.a \
	$(am__append_2) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
blixem_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__blixemh_SOURCES_DIST = blxmain.cpp blxview.cpp blxFetch.cpp \
	sequencecellrenderer.cpp blxpanel.cpp bigpicture.cpp \
	bigpicturegrid.cpp detailview.cpp detailviewtree.cpp \
	blxwindow.cpp exonview.cpp coverageview.cpp blxdotter.cpp \
	blxFetchDb.cpp blxcontext.cpp blxview.hpp blxcontext.hpp \
	blixem_.hpp detailview.hpp detailviewtree.hpp \
	sequencecellrenderer.hpp blxpanel.hpp bigpicture.hpp \
	bigpicturegrid.hpp blxwindow.hpp exonview.hpp coverageview.hpp \
	blxdotter.hpp
am__objects_1 = blixemh-blxmain.$(OBJEXT) blixemh-blxview.$(OBJEXT) \
	blixemh-blxFetch.$(OBJEXT) \
	blixemh-sequencecellrenderer.$(OBJEXT) \
	blixemh-blxpanel.$(OBJEXT) blixemh-bigpicture.$(OBJEXT) \
	blixemh-bigpicturegrid.$(OBJEXT) blixemh-detailview.$(OBJEXT) \
	blixemh-detailviewtree.$(OBJEXT) blixemh-blxwindow.$(OBJEXT) \
	blixemh-exonview.$(OBJEXT) blixemh-coverageview.$(OBJEXT) \
	blixemh-blxdotter.$(OBJEXT) blixemh-blxFetchDb.$(OBJEXT) \
	blixemh-blxcontext.$(OBJEXT)
@USE_LIBCURL_TRUE@am_blixemh_OBJECTS = $(am__objects_1)
blixemh_OBJECTS = $(am_blixemh_OBJECTS)
@USE_LIBCURL_TRUE@blixemh_DEPENDENCIES = $(am__DEPENDENCIES_3)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/blixem-bigpicture.Po \
	./$(DEPDIR)/blixem-bigpicturegrid.Po \
	./$(DEPDIR)/blixem-blxFetch.Po \
	./$(DEPDIR)/blixem-blxFetchDb.Po \
	./$(DEPDIR)/blixem-blxcontext.Po \
	./$(DEPDIR)/blixem-blxdotter.Po ./$(DEPDIR)/blixem-blxmain.Po \
	./$(DEPDIR)/blixem-blxpanel.Po ./$(DEPDIR)/blixem-blxview.Po \
	./$(DEPDIR)/blixem-blxwindow.Po \
	./$(DEPDIR)/blixem-coverageview.Po \
	./$(DEPDIR)/blixem-detailview.Po \
	./$(DEPDIR)/blixem-detailviewtree.Po \
	./$(DEPDIR)/blixem-exonview.Po \
	./$(DEPDIR)/blixem-sequencecellrenderer.Po \
	./$(DEPDIR)/blixemh-bigpicture.Po \
	./$(DEPDIR)/blixemh-bigpicturegrid.Po \
	./$(DEPDIR)/blixemh-blxFetch.Po \
	./$(DEPDIR)/blixemh-blxFetchDb.Po \
	./$(DEPDIR)/blixemh-blxcontext.Po \
	./$(DEPDIR)/blixemh-blxdotter.Po \
	./$(DEPDIR)/blixemh-blxmain.Po ./$(DEPDIR)/blixemh-blxpanel.Po \
	./$(DEPDIR)/blixemh-blxview.Po \
	./$(DEPDIR)/blixemh-blxwindow.Po \
	./$(DEPDIR)/blixemh-coverageview.Po \
	./$(DEPDIR)/blixemh-detailview.Po \
	./$(DEPDIR)/blixemh-detailviewtree.Po \
	./$(DEPDIR)/blixemh-exonview.Po \
	./$(DEPDIR)/blixemh-sequencecellrenderer.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(blixem_SOURCES) $(blixemh_SOURCES)
DIST_SOURCES = $(blixem_SOURCES) $(am__blixemh_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.am.common $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEPS_CFLAGS = @DEPS_CFLAGS@
DEPS_LIBS = @DEPS_LIBS@
DEPS_SQLITE3_CFLAGS = @DEPS_SQLITE3_CFLAGS@
DEPS_SQLITE3_LIBS = @DEPS_SQLITE3_LIBS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = .

#AM_CPPFLAGS = -g -Wall $(DEPS_CFLAGS) -I$(top_srcdir)
AM_CPPFLAGS = $(DEPS_CFLAGS) -I$(top_srcdir) $(am__append_1) \
	$(am__append_4)
AM_CXXFLAGS = -std=c++11 -g -Wall

# there's a problem on ubuntu 14 with finding X11 so this is a hopefully temporary hack...
#X_LIB = -lX11 -lm
blixem_CPPFLAGS = $(AM_CPPFLAGS) $(am__append_6)

# the gtk deps etc. must go at the end so that gbtools can pick them up
BLX_LIBS = $(top_builddir)/seqtoolsUtils/libSeqtoolsUtils.a \
	$(am__append_2) $(am__append_3) $(DEPS_LIBS) $(X_LIB) \
	$(am__append_5)
blixem_SOURCES = blxmain.cpp blxview.cpp blxFetch.cpp sequencecellrenderer.cpp blxpanel.cpp bigpicture.cpp bigpicturegrid.cpp detailview.cpp detailviewtree.cpp blxwindow.cpp exonview.cpp coverageview.cpp blxdotter.cpp blxFetchDb.cpp blxcontext.cpp blxview.hpp blxcontext.hpp blixem_.hpp detailview.hpp detailviewtree.hpp sequencecellrenderer.hpp blxpanel.hpp bigpicture.hpp bigpicturegrid.hpp blxwindow.hpp exonview.hpp coverageview.hpp blxdotter.hpp 
blixem_LDADD = $(BLX_LIBS)

# Only compile the blixemh target if we have the libcurl library
@USE_LIBCURL_TRUE@blixemh_SOURCES = $(blixem_SOURCES)
@USE_LIBCURL_TRUE@blixemh_CPPFLAGS = $(blixem_CPPFLAGS) -DPFETCH_HTML

# commented out for now....
#blixemh_LDADD = $(top_builddir)/libpfetch/libpfetch.a $(BLX_LIBS) -lcurl

# but I've commented it back in ....need to try a compile....
@USE_LIBCURL_TRUE@blixemh_LDADD = $(BLX_LIBS) -lcurl

# Extra files to remove for the maintainer-clean target.
#
MAINTAINERCLEANFILES = $(top_srcdir)/blixemApp/Makefile.in
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign blixemApp/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign blixemApp/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.am.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

blixem$(EXEEXT): $(blixem_OBJECTS) $(blixem_DEPENDENCIES) $(EXTRA_blixem_DEPENDENCIES) 
	@rm -f blixem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(blixem_OBJECTS) $(blixem_LDADD) $(LIBS)

blixemh$(EXEEXT): $(blixemh_OBJECTS) $(blixemh_DEPENDENCIES) $(EXTRA_blixemh_DEPENDENCIES) 
	@rm -f blixemh$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(blixemh_OBJECTS) $(blixemh_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-bigpicture.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-bigpicturegrid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxFetch.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxFetchDb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxcontext.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxdotter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxmain.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxpanel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-blxwindow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-coverageview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-detailview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-detailviewtree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-exonview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixem-sequencecellrenderer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-bigpicture.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-bigpicturegrid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxFetch.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxFetchDb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxcontext.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxdotter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxmain.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxpanel.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-blxwindow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-coverageview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-detailview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-detailviewtree.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-exonview.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blixemh-sequencecellrenderer.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

blixem-blxmain.o: blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxmain.o -MD -MP -MF $(DEPDIR)/blixem-blxmain.Tpo -c -o blixem-blxmain.o `test -f 'blxmain.cpp' || echo '$(srcdir)/'`blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxmain.Tpo $(DEPDIR)/blixem-blxmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxmain.cpp' object='blixem-blxmain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxmain.o `test -f 'blxmain.cpp' || echo '$(srcdir)/'`blxmain.cpp

blixem-blxmain.obj: blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxmain.obj -MD -MP -MF $(DEPDIR)/blixem-blxmain.Tpo -c -o blixem-blxmain.obj `if test -f 'blxmain.cpp'; then $(CYGPATH_W) 'blxmain.cpp'; else $(CYGPATH_W) '$(srcdir)/blxmain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxmain.Tpo $(DEPDIR)/blixem-blxmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxmain.cpp' object='blixem-blxmain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxmain.obj `if test -f 'blxmain.cpp'; then $(CYGPATH_W) 'blxmain.cpp'; else $(CYGPATH_W) '$(srcdir)/blxmain.cpp'; fi`

blixem-blxview.o: blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxview.o -MD -MP -MF $(DEPDIR)/blixem-blxview.Tpo -c -o blixem-blxview.o `test -f 'blxview.cpp' || echo '$(srcdir)/'`blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxview.Tpo $(DEPDIR)/blixem-blxview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxview.cpp' object='blixem-blxview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxview.o `test -f 'blxview.cpp' || echo '$(srcdir)/'`blxview.cpp

blixem-blxview.obj: blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxview.obj -MD -MP -MF $(DEPDIR)/blixem-blxview.Tpo -c -o blixem-blxview.obj `if test -f 'blxview.cpp'; then $(CYGPATH_W) 'blxview.cpp'; else $(CYGPATH_W) '$(srcdir)/blxview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxview.Tpo $(DEPDIR)/blixem-blxview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxview.cpp' object='blixem-blxview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxview.obj `if test -f 'blxview.cpp'; then $(CYGPATH_W) 'blxview.cpp'; else $(CYGPATH_W) '$(srcdir)/blxview.cpp'; fi`

blixem-blxFetch.o: blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxFetch.o -MD -MP -MF $(DEPDIR)/blixem-blxFetch.Tpo -c -o blixem-blxFetch.o `test -f 'blxFetch.cpp' || echo '$(srcdir)/'`blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxFetch.Tpo $(DEPDIR)/blixem-blxFetch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetch.cpp' object='blixem-blxFetch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxFetch.o `test -f 'blxFetch.cpp' || echo '$(srcdir)/'`blxFetch.cpp

blixem-blxFetch.obj: blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxFetch.obj -MD -MP -MF $(DEPDIR)/blixem-blxFetch.Tpo -c -o blixem-blxFetch.obj `if test -f 'blxFetch.cpp'; then $(CYGPATH_W) 'blxFetch.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxFetch.Tpo $(DEPDIR)/blixem-blxFetch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetch.cpp' object='blixem-blxFetch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxFetch.obj `if test -f 'blxFetch.cpp'; then $(CYGPATH_W) 'blxFetch.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetch.cpp'; fi`

blixem-sequencecellrenderer.o: sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-sequencecellrenderer.o -MD -MP -MF $(DEPDIR)/blixem-sequencecellrenderer.Tpo -c -o blixem-sequencecellrenderer.o `test -f 'sequencecellrenderer.cpp' || echo '$(srcdir)/'`sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-sequencecellrenderer.Tpo $(DEPDIR)/blixem-sequencecellrenderer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sequencecellrenderer.cpp' object='blixem-sequencecellrenderer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-sequencecellrenderer.o `test -f 'sequencecellrenderer.cpp' || echo '$(srcdir)/'`sequencecellrenderer.cpp

blixem-sequencecellrenderer.obj: sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-sequencecellrenderer.obj -MD -MP -MF $(DEPDIR)/blixem-sequencecellrenderer.Tpo -c -o blixem-sequencecellrenderer.obj `if test -f 'sequencecellrenderer.cpp'; then $(CYGPATH_W) 'sequencecellrenderer.cpp'; else $(CYGPATH_W) '$(srcdir)/sequencecellrenderer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-sequencecellrenderer.Tpo $(DEPDIR)/blixem-sequencecellrenderer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sequencecellrenderer.cpp' object='blixem-sequencecellrenderer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-sequencecellrenderer.obj `if test -f 'sequencecellrenderer.cpp'; then $(CYGPATH_W) 'sequencecellrenderer.cpp'; else $(CYGPATH_W) '$(srcdir)/sequencecellrenderer.cpp'; fi`

blixem-blxpanel.o: blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxpanel.o -MD -MP -MF $(DEPDIR)/blixem-blxpanel.Tpo -c -o blixem-blxpanel.o `test -f 'blxpanel.cpp' || echo '$(srcdir)/'`blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxpanel.Tpo $(DEPDIR)/blixem-blxpanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxpanel.cpp' object='blixem-blxpanel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxpanel.o `test -f 'blxpanel.cpp' || echo '$(srcdir)/'`blxpanel.cpp

blixem-blxpanel.obj: blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxpanel.obj -MD -MP -MF $(DEPDIR)/blixem-blxpanel.Tpo -c -o blixem-blxpanel.obj `if test -f 'blxpanel.cpp'; then $(CYGPATH_W) 'blxpanel.cpp'; else $(CYGPATH_W) '$(srcdir)/blxpanel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxpanel.Tpo $(DEPDIR)/blixem-blxpanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxpanel.cpp' object='blixem-blxpanel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxpanel.obj `if test -f 'blxpanel.cpp'; then $(CYGPATH_W) 'blxpanel.cpp'; else $(CYGPATH_W) '$(srcdir)/blxpanel.cpp'; fi`

blixem-bigpicture.o: bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-bigpicture.o -MD -MP -MF $(DEPDIR)/blixem-bigpicture.Tpo -c -o blixem-bigpicture.o `test -f 'bigpicture.cpp' || echo '$(srcdir)/'`bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-bigpicture.Tpo $(DEPDIR)/blixem-bigpicture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicture.cpp' object='blixem-bigpicture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-bigpicture.o `test -f 'bigpicture.cpp' || echo '$(srcdir)/'`bigpicture.cpp

blixem-bigpicture.obj: bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-bigpicture.obj -MD -MP -MF $(DEPDIR)/blixem-bigpicture.Tpo -c -o blixem-bigpicture.obj `if test -f 'bigpicture.cpp'; then $(CYGPATH_W) 'bigpicture.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicture.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-bigpicture.Tpo $(DEPDIR)/blixem-bigpicture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicture.cpp' object='blixem-bigpicture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-bigpicture.obj `if test -f 'bigpicture.cpp'; then $(CYGPATH_W) 'bigpicture.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicture.cpp'; fi`

blixem-bigpicturegrid.o: bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-bigpicturegrid.o -MD -MP -MF $(DEPDIR)/blixem-bigpicturegrid.Tpo -c -o blixem-bigpicturegrid.o `test -f 'bigpicturegrid.cpp' || echo '$(srcdir)/'`bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-bigpicturegrid.Tpo $(DEPDIR)/blixem-bigpicturegrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicturegrid.cpp' object='blixem-bigpicturegrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-bigpicturegrid.o `test -f 'bigpicturegrid.cpp' || echo '$(srcdir)/'`bigpicturegrid.cpp

blixem-bigpicturegrid.obj: bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-bigpicturegrid.obj -MD -MP -MF $(DEPDIR)/blixem-bigpicturegrid.Tpo -c -o blixem-bigpicturegrid.obj `if test -f 'bigpicturegrid.cpp'; then $(CYGPATH_W) 'bigpicturegrid.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicturegrid.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-bigpicturegrid.Tpo $(DEPDIR)/blixem-bigpicturegrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicturegrid.cpp' object='blixem-bigpicturegrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-bigpicturegrid.obj `if test -f 'bigpicturegrid.cpp'; then $(CYGPATH_W) 'bigpicturegrid.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicturegrid.cpp'; fi`

blixem-detailview.o: detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-detailview.o -MD -MP -MF $(DEPDIR)/blixem-detailview.Tpo -c -o blixem-detailview.o `test -f 'detailview.cpp' || echo '$(srcdir)/'`detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-detailview.Tpo $(DEPDIR)/blixem-detailview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailview.cpp' object='blixem-detailview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-detailview.o `test -f 'detailview.cpp' || echo '$(srcdir)/'`detailview.cpp

blixem-detailview.obj: detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-detailview.obj -MD -MP -MF $(DEPDIR)/blixem-detailview.Tpo -c -o blixem-detailview.obj `if test -f 'detailview.cpp'; then $(CYGPATH_W) 'detailview.cpp'; else $(CYGPATH_W) '$(srcdir)/detailview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-detailview.Tpo $(DEPDIR)/blixem-detailview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailview.cpp' object='blixem-detailview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-detailview.obj `if test -f 'detailview.cpp'; then $(CYGPATH_W) 'detailview.cpp'; else $(CYGPATH_W) '$(srcdir)/detailview.cpp'; fi`

blixem-detailviewtree.o: detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-detailviewtree.o -MD -MP -MF $(DEPDIR)/blixem-detailviewtree.Tpo -c -o blixem-detailviewtree.o `test -f 'detailviewtree.cpp' || echo '$(srcdir)/'`detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-detailviewtree.Tpo $(DEPDIR)/blixem-detailviewtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailviewtree.cpp' object='blixem-detailviewtree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-detailviewtree.o `test -f 'detailviewtree.cpp' || echo '$(srcdir)/'`detailviewtree.cpp

blixem-detailviewtree.obj: detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-detailviewtree.obj -MD -MP -MF $(DEPDIR)/blixem-detailviewtree.Tpo -c -o blixem-detailviewtree.obj `if test -f 'detailviewtree.cpp'; then $(CYGPATH_W) 'detailviewtree.cpp'; else $(CYGPATH_W) '$(srcdir)/detailviewtree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-detailviewtree.Tpo $(DEPDIR)/blixem-detailviewtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailviewtree.cpp' object='blixem-detailviewtree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-detailviewtree.obj `if test -f 'detailviewtree.cpp'; then $(CYGPATH_W) 'detailviewtree.cpp'; else $(CYGPATH_W) '$(srcdir)/detailviewtree.cpp'; fi`

blixem-blxwindow.o: blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxwindow.o -MD -MP -MF $(DEPDIR)/blixem-blxwindow.Tpo -c -o blixem-blxwindow.o `test -f 'blxwindow.cpp' || echo '$(srcdir)/'`blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxwindow.Tpo $(DEPDIR)/blixem-blxwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxwindow.cpp' object='blixem-blxwindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxwindow.o `test -f 'blxwindow.cpp' || echo '$(srcdir)/'`blxwindow.cpp

blixem-blxwindow.obj: blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxwindow.obj -MD -MP -MF $(DEPDIR)/blixem-blxwindow.Tpo -c -o blixem-blxwindow.obj `if test -f 'blxwindow.cpp'; then $(CYGPATH_W) 'blxwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/blxwindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxwindow.Tpo $(DEPDIR)/blixem-blxwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxwindow.cpp' object='blixem-blxwindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxwindow.obj `if test -f 'blxwindow.cpp'; then $(CYGPATH_W) 'blxwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/blxwindow.cpp'; fi`

blixem-exonview.o: exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-exonview.o -MD -MP -MF $(DEPDIR)/blixem-exonview.Tpo -c -o blixem-exonview.o `test -f 'exonview.cpp' || echo '$(srcdir)/'`exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-exonview.Tpo $(DEPDIR)/blixem-exonview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='exonview.cpp' object='blixem-exonview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-exonview.o `test -f 'exonview.cpp' || echo '$(srcdir)/'`exonview.cpp

blixem-exonview.obj: exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-exonview.obj -MD -MP -MF $(DEPDIR)/blixem-exonview.Tpo -c -o blixem-exonview.obj `if test -f 'exonview.cpp'; then $(CYGPATH_W) 'exonview.cpp'; else $(CYGPATH_W) '$(srcdir)/exonview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-exonview.Tpo $(DEPDIR)/blixem-exonview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='exonview.cpp' object='blixem-exonview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-exonview.obj `if test -f 'exonview.cpp'; then $(CYGPATH_W) 'exonview.cpp'; else $(CYGPATH_W) '$(srcdir)/exonview.cpp'; fi`

blixem-coverageview.o: coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-coverageview.o -MD -MP -MF $(DEPDIR)/blixem-coverageview.Tpo -c -o blixem-coverageview.o `test -f 'coverageview.cpp' || echo '$(srcdir)/'`coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-coverageview.Tpo $(DEPDIR)/blixem-coverageview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coverageview.cpp' object='blixem-coverageview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-coverageview.o `test -f 'coverageview.cpp' || echo '$(srcdir)/'`coverageview.cpp

blixem-coverageview.obj: coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-coverageview.obj -MD -MP -MF $(DEPDIR)/blixem-coverageview.Tpo -c -o blixem-coverageview.obj `if test -f 'coverageview.cpp'; then $(CYGPATH_W) 'coverageview.cpp'; else $(CYGPATH_W) '$(srcdir)/coverageview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-coverageview.Tpo $(DEPDIR)/blixem-coverageview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coverageview.cpp' object='blixem-coverageview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-coverageview.obj `if test -f 'coverageview.cpp'; then $(CYGPATH_W) 'coverageview.cpp'; else $(CYGPATH_W) '$(srcdir)/coverageview.cpp'; fi`

blixem-blxdotter.o: blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxdotter.o -MD -MP -MF $(DEPDIR)/blixem-blxdotter.Tpo -c -o blixem-blxdotter.o `test -f 'blxdotter.cpp' || echo '$(srcdir)/'`blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxdotter.Tpo $(DEPDIR)/blixem-blxdotter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxdotter.cpp' object='blixem-blxdotter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxdotter.o `test -f 'blxdotter.cpp' || echo '$(srcdir)/'`blxdotter.cpp

blixem-blxdotter.obj: blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxdotter.obj -MD -MP -MF $(DEPDIR)/blixem-blxdotter.Tpo -c -o blixem-blxdotter.obj `if test -f 'blxdotter.cpp'; then $(CYGPATH_W) 'blxdotter.cpp'; else $(CYGPATH_W) '$(srcdir)/blxdotter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxdotter.Tpo $(DEPDIR)/blixem-blxdotter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxdotter.cpp' object='blixem-blxdotter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxdotter.obj `if test -f 'blxdotter.cpp'; then $(CYGPATH_W) 'blxdotter.cpp'; else $(CYGPATH_W) '$(srcdir)/blxdotter.cpp'; fi`

blixem-blxFetchDb.o: blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxFetchDb.o -MD -MP -MF $(DEPDIR)/blixem-blxFetchDb.Tpo -c -o blixem-blxFetchDb.o `test -f 'blxFetchDb.cpp' || echo '$(srcdir)/'`blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxFetchDb.Tpo $(DEPDIR)/blixem-blxFetchDb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetchDb.cpp' object='blixem-blxFetchDb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxFetchDb.o `test -f 'blxFetchDb.cpp' || echo '$(srcdir)/'`blxFetchDb.cpp

blixem-blxFetchDb.obj: blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxFetchDb.obj -MD -MP -MF $(DEPDIR)/blixem-blxFetchDb.Tpo -c -o blixem-blxFetchDb.obj `if test -f 'blxFetchDb.cpp'; then $(CYGPATH_W) 'blxFetchDb.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetchDb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxFetchDb.Tpo $(DEPDIR)/blixem-blxFetchDb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetchDb.cpp' object='blixem-blxFetchDb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxFetchDb.obj `if test -f 'blxFetchDb.cpp'; then $(CYGPATH_W) 'blxFetchDb.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetchDb.cpp'; fi`

blixem-blxcontext.o: blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxcontext.o -MD -MP -MF $(DEPDIR)/blixem-blxcontext.Tpo -c -o blixem-blxcontext.o `test -f 'blxcontext.cpp' || echo '$(srcdir)/'`blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxcontext.Tpo $(DEPDIR)/blixem-blxcontext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxcontext.cpp' object='blixem-blxcontext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxcontext.o `test -f 'blxcontext.cpp' || echo '$(srcdir)/'`blxcontext.cpp

blixem-blxcontext.obj: blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixem-blxcontext.obj -MD -MP -MF $(DEPDIR)/blixem-blxcontext.Tpo -c -o blixem-blxcontext.obj `if test -f 'blxcontext.cpp'; then $(CYGPATH_W) 'blxcontext.cpp'; else $(CYGPATH_W) '$(srcdir)/blxcontext.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixem-blxcontext.Tpo $(DEPDIR)/blixem-blxcontext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxcontext.cpp' object='blixem-blxcontext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixem-blxcontext.obj `if test -f 'blxcontext.cpp'; then $(CYGPATH_W) 'blxcontext.cpp'; else $(CYGPATH_W) '$(srcdir)/blxcontext.cpp'; fi`

blixemh-blxmain.o: blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxmain.o -MD -MP -MF $(DEPDIR)/blixemh-blxmain.Tpo -c -o blixemh-blxmain.o `test -f 'blxmain.cpp' || echo '$(srcdir)/'`blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxmain.Tpo $(DEPDIR)/blixemh-blxmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxmain.cpp' object='blixemh-blxmain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxmain.o `test -f 'blxmain.cpp' || echo '$(srcdir)/'`blxmain.cpp

blixemh-blxmain.obj: blxmain.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxmain.obj -MD -MP -MF $(DEPDIR)/blixemh-blxmain.Tpo -c -o blixemh-blxmain.obj `if test -f 'blxmain.cpp'; then $(CYGPATH_W) 'blxmain.cpp'; else $(CYGPATH_W) '$(srcdir)/blxmain.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxmain.Tpo $(DEPDIR)/blixemh-blxmain.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxmain.cpp' object='blixemh-blxmain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxmain.obj `if test -f 'blxmain.cpp'; then $(CYGPATH_W) 'blxmain.cpp'; else $(CYGPATH_W) '$(srcdir)/blxmain.cpp'; fi`

blixemh-blxview.o: blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxview.o -MD -MP -MF $(DEPDIR)/blixemh-blxview.Tpo -c -o blixemh-blxview.o `test -f 'blxview.cpp' || echo '$(srcdir)/'`blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxview.Tpo $(DEPDIR)/blixemh-blxview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxview.cpp' object='blixemh-blxview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxview.o `test -f 'blxview.cpp' || echo '$(srcdir)/'`blxview.cpp

blixemh-blxview.obj: blxview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxview.obj -MD -MP -MF $(DEPDIR)/blixemh-blxview.Tpo -c -o blixemh-blxview.obj `if test -f 'blxview.cpp'; then $(CYGPATH_W) 'blxview.cpp'; else $(CYGPATH_W) '$(srcdir)/blxview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxview.Tpo $(DEPDIR)/blixemh-blxview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxview.cpp' object='blixemh-blxview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxview.obj `if test -f 'blxview.cpp'; then $(CYGPATH_W) 'blxview.cpp'; else $(CYGPATH_W) '$(srcdir)/blxview.cpp'; fi`

blixemh-blxFetch.o: blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxFetch.o -MD -MP -MF $(DEPDIR)/blixemh-blxFetch.Tpo -c -o blixemh-blxFetch.o `test -f 'blxFetch.cpp' || echo '$(srcdir)/'`blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxFetch.Tpo $(DEPDIR)/blixemh-blxFetch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetch.cpp' object='blixemh-blxFetch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxFetch.o `test -f 'blxFetch.cpp' || echo '$(srcdir)/'`blxFetch.cpp

blixemh-blxFetch.obj: blxFetch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxFetch.obj -MD -MP -MF $(DEPDIR)/blixemh-blxFetch.Tpo -c -o blixemh-blxFetch.obj `if test -f 'blxFetch.cpp'; then $(CYGPATH_W) 'blxFetch.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxFetch.Tpo $(DEPDIR)/blixemh-blxFetch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetch.cpp' object='blixemh-blxFetch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxFetch.obj `if test -f 'blxFetch.cpp'; then $(CYGPATH_W) 'blxFetch.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetch.cpp'; fi`

blixemh-sequencecellrenderer.o: sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-sequencecellrenderer.o -MD -MP -MF $(DEPDIR)/blixemh-sequencecellrenderer.Tpo -c -o blixemh-sequencecellrenderer.o `test -f 'sequencecellrenderer.cpp' || echo '$(srcdir)/'`sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-sequencecellrenderer.Tpo $(DEPDIR)/blixemh-sequencecellrenderer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sequencecellrenderer.cpp' object='blixemh-sequencecellrenderer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-sequencecellrenderer.o `test -f 'sequencecellrenderer.cpp' || echo '$(srcdir)/'`sequencecellrenderer.cpp

blixemh-sequencecellrenderer.obj: sequencecellrenderer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-sequencecellrenderer.obj -MD -MP -MF $(DEPDIR)/blixemh-sequencecellrenderer.Tpo -c -o blixemh-sequencecellrenderer.obj `if test -f 'sequencecellrenderer.cpp'; then $(CYGPATH_W) 'sequencecellrenderer.cpp'; else $(CYGPATH_W) '$(srcdir)/sequencecellrenderer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-sequencecellrenderer.Tpo $(DEPDIR)/blixemh-sequencecellrenderer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='sequencecellrenderer.cpp' object='blixemh-sequencecellrenderer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-sequencecellrenderer.obj `if test -f 'sequencecellrenderer.cpp'; then $(CYGPATH_W) 'sequencecellrenderer.cpp'; else $(CYGPATH_W) '$(srcdir)/sequencecellrenderer.cpp'; fi`

blixemh-blxpanel.o: blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxpanel.o -MD -MP -MF $(DEPDIR)/blixemh-blxpanel.Tpo -c -o blixemh-blxpanel.o `test -f 'blxpanel.cpp' || echo '$(srcdir)/'`blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxpanel.Tpo $(DEPDIR)/blixemh-blxpanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxpanel.cpp' object='blixemh-blxpanel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxpanel.o `test -f 'blxpanel.cpp' || echo '$(srcdir)/'`blxpanel.cpp

blixemh-blxpanel.obj: blxpanel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxpanel.obj -MD -MP -MF $(DEPDIR)/blixemh-blxpanel.Tpo -c -o blixemh-blxpanel.obj `if test -f 'blxpanel.cpp'; then $(CYGPATH_W) 'blxpanel.cpp'; else $(CYGPATH_W) '$(srcdir)/blxpanel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxpanel.Tpo $(DEPDIR)/blixemh-blxpanel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxpanel.cpp' object='blixemh-blxpanel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxpanel.obj `if test -f 'blxpanel.cpp'; then $(CYGPATH_W) 'blxpanel.cpp'; else $(CYGPATH_W) '$(srcdir)/blxpanel.cpp'; fi`

blixemh-bigpicture.o: bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-bigpicture.o -MD -MP -MF $(DEPDIR)/blixemh-bigpicture.Tpo -c -o blixemh-bigpicture.o `test -f 'bigpicture.cpp' || echo '$(srcdir)/'`bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-bigpicture.Tpo $(DEPDIR)/blixemh-bigpicture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicture.cpp' object='blixemh-bigpicture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-bigpicture.o `test -f 'bigpicture.cpp' || echo '$(srcdir)/'`bigpicture.cpp

blixemh-bigpicture.obj: bigpicture.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-bigpicture.obj -MD -MP -MF $(DEPDIR)/blixemh-bigpicture.Tpo -c -o blixemh-bigpicture.obj `if test -f 'bigpicture.cpp'; then $(CYGPATH_W) 'bigpicture.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicture.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-bigpicture.Tpo $(DEPDIR)/blixemh-bigpicture.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicture.cpp' object='blixemh-bigpicture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-bigpicture.obj `if test -f 'bigpicture.cpp'; then $(CYGPATH_W) 'bigpicture.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicture.cpp'; fi`

blixemh-bigpicturegrid.o: bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-bigpicturegrid.o -MD -MP -MF $(DEPDIR)/blixemh-bigpicturegrid.Tpo -c -o blixemh-bigpicturegrid.o `test -f 'bigpicturegrid.cpp' || echo '$(srcdir)/'`bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-bigpicturegrid.Tpo $(DEPDIR)/blixemh-bigpicturegrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicturegrid.cpp' object='blixemh-bigpicturegrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-bigpicturegrid.o `test -f 'bigpicturegrid.cpp' || echo '$(srcdir)/'`bigpicturegrid.cpp

blixemh-bigpicturegrid.obj: bigpicturegrid.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-bigpicturegrid.obj -MD -MP -MF $(DEPDIR)/blixemh-bigpicturegrid.Tpo -c -o blixemh-bigpicturegrid.obj `if test -f 'bigpicturegrid.cpp'; then $(CYGPATH_W) 'bigpicturegrid.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicturegrid.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-bigpicturegrid.Tpo $(DEPDIR)/blixemh-bigpicturegrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bigpicturegrid.cpp' object='blixemh-bigpicturegrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-bigpicturegrid.obj `if test -f 'bigpicturegrid.cpp'; then $(CYGPATH_W) 'bigpicturegrid.cpp'; else $(CYGPATH_W) '$(srcdir)/bigpicturegrid.cpp'; fi`

blixemh-detailview.o: detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-detailview.o -MD -MP -MF $(DEPDIR)/blixemh-detailview.Tpo -c -o blixemh-detailview.o `test -f 'detailview.cpp' || echo '$(srcdir)/'`detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-detailview.Tpo $(DEPDIR)/blixemh-detailview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailview.cpp' object='blixemh-detailview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-detailview.o `test -f 'detailview.cpp' || echo '$(srcdir)/'`detailview.cpp

blixemh-detailview.obj: detailview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-detailview.obj -MD -MP -MF $(DEPDIR)/blixemh-detailview.Tpo -c -o blixemh-detailview.obj `if test -f 'detailview.cpp'; then $(CYGPATH_W) 'detailview.cpp'; else $(CYGPATH_W) '$(srcdir)/detailview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-detailview.Tpo $(DEPDIR)/blixemh-detailview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailview.cpp' object='blixemh-detailview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-detailview.obj `if test -f 'detailview.cpp'; then $(CYGPATH_W) 'detailview.cpp'; else $(CYGPATH_W) '$(srcdir)/detailview.cpp'; fi`

blixemh-detailviewtree.o: detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-detailviewtree.o -MD -MP -MF $(DEPDIR)/blixemh-detailviewtree.Tpo -c -o blixemh-detailviewtree.o `test -f 'detailviewtree.cpp' || echo '$(srcdir)/'`detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-detailviewtree.Tpo $(DEPDIR)/blixemh-detailviewtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailviewtree.cpp' object='blixemh-detailviewtree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-detailviewtree.o `test -f 'detailviewtree.cpp' || echo '$(srcdir)/'`detailviewtree.cpp

blixemh-detailviewtree.obj: detailviewtree.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-detailviewtree.obj -MD -MP -MF $(DEPDIR)/blixemh-detailviewtree.Tpo -c -o blixemh-detailviewtree.obj `if test -f 'detailviewtree.cpp'; then $(CYGPATH_W) 'detailviewtree.cpp'; else $(CYGPATH_W) '$(srcdir)/detailviewtree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-detailviewtree.Tpo $(DEPDIR)/blixemh-detailviewtree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='detailviewtree.cpp' object='blixemh-detailviewtree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-detailviewtree.obj `if test -f 'detailviewtree.cpp'; then $(CYGPATH_W) 'detailviewtree.cpp'; else $(CYGPATH_W) '$(srcdir)/detailviewtree.cpp'; fi`

blixemh-blxwindow.o: blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxwindow.o -MD -MP -MF $(DEPDIR)/blixemh-blxwindow.Tpo -c -o blixemh-blxwindow.o `test -f 'blxwindow.cpp' || echo '$(srcdir)/'`blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxwindow.Tpo $(DEPDIR)/blixemh-blxwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxwindow.cpp' object='blixemh-blxwindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxwindow.o `test -f 'blxwindow.cpp' || echo '$(srcdir)/'`blxwindow.cpp

blixemh-blxwindow.obj: blxwindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxwindow.obj -MD -MP -MF $(DEPDIR)/blixemh-blxwindow.Tpo -c -o blixemh-blxwindow.obj `if test -f 'blxwindow.cpp'; then $(CYGPATH_W) 'blxwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/blxwindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxwindow.Tpo $(DEPDIR)/blixemh-blxwindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxwindow.cpp' object='blixemh-blxwindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxwindow.obj `if test -f 'blxwindow.cpp'; then $(CYGPATH_W) 'blxwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/blxwindow.cpp'; fi`

blixemh-exonview.o: exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-exonview.o -MD -MP -MF $(DEPDIR)/blixemh-exonview.Tpo -c -o blixemh-exonview.o `test -f 'exonview.cpp' || echo '$(srcdir)/'`exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-exonview.Tpo $(DEPDIR)/blixemh-exonview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='exonview.cpp' object='blixemh-exonview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-exonview.o `test -f 'exonview.cpp' || echo '$(srcdir)/'`exonview.cpp

blixemh-exonview.obj: exonview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-exonview.obj -MD -MP -MF $(DEPDIR)/blixemh-exonview.Tpo -c -o blixemh-exonview.obj `if test -f 'exonview.cpp'; then $(CYGPATH_W) 'exonview.cpp'; else $(CYGPATH_W) '$(srcdir)/exonview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-exonview.Tpo $(DEPDIR)/blixemh-exonview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='exonview.cpp' object='blixemh-exonview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-exonview.obj `if test -f 'exonview.cpp'; then $(CYGPATH_W) 'exonview.cpp'; else $(CYGPATH_W) '$(srcdir)/exonview.cpp'; fi`

blixemh-coverageview.o: coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-coverageview.o -MD -MP -MF $(DEPDIR)/blixemh-coverageview.Tpo -c -o blixemh-coverageview.o `test -f 'coverageview.cpp' || echo '$(srcdir)/'`coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-coverageview.Tpo $(DEPDIR)/blixemh-coverageview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coverageview.cpp' object='blixemh-coverageview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-coverageview.o `test -f 'coverageview.cpp' || echo '$(srcdir)/'`coverageview.cpp

blixemh-coverageview.obj: coverageview.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-coverageview.obj -MD -MP -MF $(DEPDIR)/blixemh-coverageview.Tpo -c -o blixemh-coverageview.obj `if test -f 'coverageview.cpp'; then $(CYGPATH_W) 'coverageview.cpp'; else $(CYGPATH_W) '$(srcdir)/coverageview.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-coverageview.Tpo $(DEPDIR)/blixemh-coverageview.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='coverageview.cpp' object='blixemh-coverageview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-coverageview.obj `if test -f 'coverageview.cpp'; then $(CYGPATH_W) 'coverageview.cpp'; else $(CYGPATH_W) '$(srcdir)/coverageview.cpp'; fi`

blixemh-blxdotter.o: blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxdotter.o -MD -MP -MF $(DEPDIR)/blixemh-blxdotter.Tpo -c -o blixemh-blxdotter.o `test -f 'blxdotter.cpp' || echo '$(srcdir)/'`blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxdotter.Tpo $(DEPDIR)/blixemh-blxdotter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxdotter.cpp' object='blixemh-blxdotter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxdotter.o `test -f 'blxdotter.cpp' || echo '$(srcdir)/'`blxdotter.cpp

blixemh-blxdotter.obj: blxdotter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxdotter.obj -MD -MP -MF $(DEPDIR)/blixemh-blxdotter.Tpo -c -o blixemh-blxdotter.obj `if test -f 'blxdotter.cpp'; then $(CYGPATH_W) 'blxdotter.cpp'; else $(CYGPATH_W) '$(srcdir)/blxdotter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxdotter.Tpo $(DEPDIR)/blixemh-blxdotter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxdotter.cpp' object='blixemh-blxdotter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxdotter.obj `if test -f 'blxdotter.cpp'; then $(CYGPATH_W) 'blxdotter.cpp'; else $(CYGPATH_W) '$(srcdir)/blxdotter.cpp'; fi`

blixemh-blxFetchDb.o: blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxFetchDb.o -MD -MP -MF $(DEPDIR)/blixemh-blxFetchDb.Tpo -c -o blixemh-blxFetchDb.o `test -f 'blxFetchDb.cpp' || echo '$(srcdir)/'`blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxFetchDb.Tpo $(DEPDIR)/blixemh-blxFetchDb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetchDb.cpp' object='blixemh-blxFetchDb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxFetchDb.o `test -f 'blxFetchDb.cpp' || echo '$(srcdir)/'`blxFetchDb.cpp

blixemh-blxFetchDb.obj: blxFetchDb.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxFetchDb.obj -MD -MP -MF $(DEPDIR)/blixemh-blxFetchDb.Tpo -c -o blixemh-blxFetchDb.obj `if test -f 'blxFetchDb.cpp'; then $(CYGPATH_W) 'blxFetchDb.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetchDb.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxFetchDb.Tpo $(DEPDIR)/blixemh-blxFetchDb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxFetchDb.cpp' object='blixemh-blxFetchDb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxFetchDb.obj `if test -f 'blxFetchDb.cpp'; then $(CYGPATH_W) 'blxFetchDb.cpp'; else $(CYGPATH_W) '$(srcdir)/blxFetchDb.cpp'; fi`

blixemh-blxcontext.o: blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxcontext.o -MD -MP -MF $(DEPDIR)/blixemh-blxcontext.Tpo -c -o blixemh-blxcontext.o `test -f 'blxcontext.cpp' || echo '$(srcdir)/'`blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxcontext.Tpo $(DEPDIR)/blixemh-blxcontext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxcontext.cpp' object='blixemh-blxcontext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxcontext.o `test -f 'blxcontext.cpp' || echo '$(srcdir)/'`blxcontext.cpp

blixemh-blxcontext.obj: blxcontext.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT blixemh-blxcontext.obj -MD -MP -MF $(DEPDIR)/blixemh-blxcontext.Tpo -c -o blixemh-blxcontext.obj `if test -f 'blxcontext.cpp'; then $(CYGPATH_W) 'blxcontext.cpp'; else $(CYGPATH_W) '$(srcdir)/blxcontext.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/blixemh-blxcontext.Tpo $(DEPDIR)/blixemh-blxcontext.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='blxcontext.cpp' object='blixemh-blxcontext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blixemh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o blixemh-blxcontext.obj `if test -f 'blxcontext.cpp'; then $(CYGPATH_W) 'blxcontext.cpp'; else $(CYGPATH_W) '$(srcdir)/blxcontext.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/blixem-bigpicture.Po
	-rm -f ./$(DEPDIR)/blixem-bigpicturegrid.Po
	-rm -f ./$(DEPDIR)/blixem-blxFetch.Po
	-rm -f ./$(DEPDIR)/blixem-blxFetchDb.Po
	-rm -f ./$(DEPDIR)/blixem-blxcontext.Po
	-rm -f ./$(DEPDIR)/blixem-blxdotter.Po
	-rm -f ./$(DEPDIR)/blixem-blxmain.Po
	-rm -f ./$(DEPDIR)/blixem-blxpanel.Po
	-rm -f ./$(DEPDIR)/blixem-blxview.Po
	-rm -f ./$(DEPDIR)/blixem-blxwindow.Po
	-rm -f ./$(DEPDIR)/blixem-coverageview.Po
	-rm -f ./$(DEPDIR)/blixem-detailview.Po
	-rm -f ./$(DEPDIR)/blixem-detailviewtree.Po
	-rm -f ./$(DEPDIR)/blixem-exonview.Po
	-rm -f ./$(DEPDIR)/blixem-sequencecellrenderer.Po
	-rm -f ./$(DEPDIR)/blixemh-bigpicture.Po
	-rm -f ./$(DEPDIR)/blixemh-bigpicturegrid.Po
	-rm -f ./$(DEPDIR)/blixemh-blxFetch.Po
	-rm -f ./$(DEPDIR)/blixemh-blxFetchDb.Po
	-rm -f ./$(DEPDIR)/blixemh-blxcontext.Po
	-rm -f ./$(DEPDIR)/blixemh-blxdotter.Po
	-rm -f ./$(DEPDIR)/blixemh-blxmain.Po
	-rm -f ./$(DEPDIR)/blixemh-blxpanel.Po
	-rm -f ./$(DEPDIR)/blixemh-blxview.Po
	-rm -f ./$(DEPDIR)/blixemh-blxwindow.Po
	-rm -f ./$(DEPDIR)/blixemh-coverageview.Po
	-rm -f ./$(DEPDIR)/blixemh-detailview.Po
	-rm -f ./$(DEPDIR)/blixemh-detailviewtree.Po
	-rm -f ./$(DEPDIR)/blixemh-exonview.Po
	-rm -f ./$(DEPDIR)/blixemh-sequencecellrenderer.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/blixem-bigpicture.Po
	-rm -f ./$(DEPDIR)/blixem-bigpicturegrid.Po
	-rm -f ./$(DEPDIR)/blixem-blxFetch.Po
	-rm -f ./$(DEPDIR)/blixem-blxFetchDb.Po
	-rm -f ./$(DEPDIR)/blixem-blxcontext.Po
	-rm -f ./$(DEPDIR)/blixem-blxdotter.Po
	-rm -f ./$(DEPDIR)/blixem-blxmain.Po
	-rm -f ./$(DEPDIR)/blixem-blxpanel.Po
	-rm -f ./$(DEPDIR)/blixem-blxview.Po
	-rm -f ./$(DEPDIR)/blixem-blxwindow.Po
	-rm -f ./$(DEPDIR)/blixem-coverageview.Po
	-rm -f ./$(DEPDIR)/blixem-detailview.Po
	-rm -f ./$(DEPDIR)/blixem-detailviewtree.Po
	-rm -f ./$(DEPDIR)/blixem-exonview.Po
	-rm -f ./$(DEPDIR)/blixem-sequencecellrenderer.Po
	-rm -f ./$(DEPDIR)/blixemh-bigpicture.Po
	-rm -f ./$(DEPDIR)/blixemh-bigpicturegrid.Po
	-rm -f ./$(DEPDIR)/blixemh-blxFetch.Po
	-rm -f ./$(DEPDIR)/blixemh-blxFetchDb.Po
	-rm -f ./$(DEPDIR)/blixemh-blxcontext.Po
	-rm -f ./$(DEPDIR)/blixemh-blxdotter.Po
	-rm -f ./$(DEPDIR)/blixemh-blxmain.Po
	-rm -f ./$(DEPDIR)/blixemh-blxpanel.Po
	-rm -f ./$(DEPDIR)/blixemh-blxview.Po
	-rm -f ./$(DEPDIR)/blixemh-blxwindow.Po
	-rm -f ./$(DEPDIR)/blixemh-coverageview.Po
	-rm -f ./$(DEPDIR)/blixemh-detailview.Po
	-rm -f ./$(DEPDIR)/blixemh-detailviewtree.Po
	-rm -f ./$(DEPDIR)/blixemh-exonview.Po
	-rm -f ./$(DEPDIR)/blixemh-sequencecellrenderer.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-binPROGRAMS \
	clean-generic cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
